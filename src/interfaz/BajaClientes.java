package interfaz;

import java.awt.Color;
import conexion.Conexion;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author chris
 */
public final class BajaClientes extends javax.swing.JFrame implements ActionListener, Interfaz {

    public BajaClientes() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        jPanel2.setBackground(Color.white);
        setTitle("BDPaq");
        BotonMostrar.setBackground(Color.white);
        BotonVolver.setBackground(Color.white);
        BotonEliminar.setBackground(Color.white);
        setIconImage(getIconImage());
        rootbaja.setText(menu.LabelRoot.getText());
        BotonEliminar.setEnabled(false);
        BotonEliminar.addActionListener(this);
        //Capturar eventos de escritura del fielddni para desactivar boton eliminar
        fielddni.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateButtonState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateButtonState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateButtonState();
            }

            private void updateButtonState() {
                BotonEliminar.setEnabled(!fielddni.getText().isEmpty());
            }
        });
    }

    @Override
    public Image getIconImage() {
        Image miIcono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return miIcono;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        BotonMostrar = new javax.swing.JButton();
        BotonVolver = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        rootbaja = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaMostrar = new javax.swing.JTextArea();
        BotonEliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fielddni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(45, 49, 66));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonMostrar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        BotonMostrar.setText("Mostrar");
        BotonMostrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonMostrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BotonMostrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BotonMostrarMouseExited(evt);
            }
        });
        BotonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMostrarActionPerformed(evt);
            }
        });
        jPanel2.add(BotonMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 80, -1));

        BotonVolver.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        BotonVolver.setText("Volver");
        BotonVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BotonVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BotonVolverMouseExited(evt);
            }
        });
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverActionPerformed(evt);
            }
        });
        jPanel2.add(BotonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 342, -1, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Usuario:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 50, 20));

        rootbaja.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(rootbaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 70, 20));

        AreaMostrar.setColumns(20);
        AreaMostrar.setRows(5);
        AreaMostrar.setBorder(null);
        AreaMostrar.setFocusable(false);
        jScrollPane1.setViewportView(AreaMostrar);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 330, 120));

        BotonEliminar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        BotonEliminar.setText("Eliminar");
        BotonEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BotonEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BotonEliminarMouseExited(evt);
            }
        });
        BotonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(BotonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 80, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondoprincipal.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 450, 70));

        jPanel3.setBackground(new java.awt.Color(45, 49, 66));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BAJA CLIENTES");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pajarob.png"))); // NOI18N
        jLabel9.setText("jLabel9");

        fielddni.setForeground(new java.awt.Color(204, 204, 204));
        fielddni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fielddniActionPerformed(evt);
            }
        });
        fielddni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fielddniKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("DNI:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(157, 157, 157))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fielddni, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fielddni, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(169, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 320));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMostrarActionPerformed
        if (fielddni.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo DNI vacio");
        } else {
            AreaMostrar.setText("");

            try (Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/paqueteria", "root", "")) {
                String sql = "SELECT * FROM clientes WHERE DniCliente = ?";
                PreparedStatement enviarConsultas = conexion.prepareStatement(sql);
                enviarConsultas.setString(1, fielddni.getText());
                ResultSet resultado = enviarConsultas.executeQuery();
                if (resultado.next()) {
                    String nombre = resultado.getString("NombreCliente");
                    String dni = resultado.getString("DniCliente");
                    String direccion = resultado.getString("DireccionCliente");
                    int telefono = resultado.getInt("TelefonoCliente");
                    String email = resultado.getString("EmailCliente");
                    String sexo = resultado.getString("Sexo");
                    if (resultado.getString("Sexo") == "H") {
                        sexof = "Hombre";
                    } else {
                        sexof = "Mujer";
                    }
                    AreaMostrar.append("Nombre: " + nombre + "\n");
                    AreaMostrar.append("Dni:" + dni + "\n");
                    AreaMostrar.append("Direccion: " + direccion + "\n");
                    AreaMostrar.append("Telefono: " + telefono + "\n");
                    AreaMostrar.append("Email: " + email + "\n");
                    AreaMostrar.append("Sexo: " + sexof);

                } else {
                    JOptionPane.showMessageDialog(null, "Cliente no encontrado");
                }
            } catch (SQLException e) {
                System.out.println("Error al obtener los datos" + e.getMessage());
            }
        }

    }//GEN-LAST:event_BotonMostrarActionPerformed

    private void BotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverActionPerformed
        VentanaMenu menu = new VentanaMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BotonVolverActionPerformed

    private void fielddniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fielddniActionPerformed

    }//GEN-LAST:event_fielddniActionPerformed

    private void BotonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarActionPerformed

    }//GEN-LAST:event_BotonEliminarActionPerformed

    private void fielddniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fielddniKeyTyped
        fielddni.setForeground(Color.black);

    }//GEN-LAST:event_fielddniKeyTyped

    private void BotonMostrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonMostrarMouseClicked

    }//GEN-LAST:event_BotonMostrarMouseClicked

    private void BotonVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonVolverMouseEntered
        BotonVolver.setBackground(new Color(45, 49, 66));
        BotonVolver.setForeground(Color.white);
    }//GEN-LAST:event_BotonVolverMouseEntered

    private void BotonVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonVolverMouseExited
        BotonVolver.setBackground(new Color(255, 255, 255));
        BotonVolver.setForeground(Color.black);
    }//GEN-LAST:event_BotonVolverMouseExited

    private void BotonEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEliminarMouseEntered
        BotonEliminar.setBackground(new Color(45, 49, 66));
        BotonEliminar.setForeground(Color.white);
    }//GEN-LAST:event_BotonEliminarMouseEntered

    private void BotonEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEliminarMouseExited
        BotonEliminar.setBackground(new Color(255, 255, 255));
        BotonEliminar.setForeground(Color.black);
    }//GEN-LAST:event_BotonEliminarMouseExited

    private void BotonMostrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonMostrarMouseEntered
        BotonMostrar.setBackground(new Color(45, 49, 66));
        BotonMostrar.setForeground(Color.white);
    }//GEN-LAST:event_BotonMostrarMouseEntered

    private void BotonMostrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonMostrarMouseExited
        BotonMostrar.setBackground(new Color(255, 255, 255));
        BotonMostrar.setForeground(Color.black);
    }//GEN-LAST:event_BotonMostrarMouseExited

    private void BotonEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEliminarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonEliminarMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaMostrar;
    private javax.swing.JButton BotonEliminar;
    private javax.swing.JButton BotonMostrar;
    private javax.swing.JButton BotonVolver;
    private javax.swing.JTextField fielddni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel rootbaja;
    // End of variables declaration//GEN-END:variables

    public String dni;
    String sexof;
    VentanaMenu menu = new VentanaMenu();

    @Override
    public void actionPerformed(ActionEvent e) {
        Object escucha = e.getSource();
        if (escucha == BotonEliminar) {
            eliminar();
        }
    }

    public void eliminar() {
        if (fielddni.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debes introducir el Dni");
        } else {
            int opcion = JOptionPane.showConfirmDialog(null, "¿Estas seguro?");
            if (opcion == JOptionPane.YES_OPTION) {
                dni = fielddni.getText();
                try (Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/paqueteria", "root", "")) {
                    String sql = "DELETE FROM clientes WHERE DniCliente = ?";
                    PreparedStatement enviarConsultas = conexion.prepareStatement(sql);
                    enviarConsultas.setString(1, fielddni.getText());

                    int filasEliminadas = enviarConsultas.executeUpdate();
                    notificacion();
                    JOptionPane.showMessageDialog(null, "Se ha dado de baja " + filasEliminadas + " cliente", "", JOptionPane.INFORMATION_MESSAGE);
                    AreaMostrar.setText(" ");
                    fielddni.setText(" ");
                } catch (SQLException e) {
                    notificacion();
                    JOptionPane.showMessageDialog(null, "Error al eliminar" + e.getMessage());
                }
            }
        }

    }
    
        @Override
    public void notificacion() {
        try {
            // Carga el archivo de sonido
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(sonido);

            // Obtiene el formato de audio
            AudioFormat format = audioStream.getFormat();

            // Crea una fuente de datos de audio
            DataLine.Info info = new DataLine.Info(Clip.class, format);

            // Abre el clip de audio
            Clip clip = (Clip) AudioSystem.getLine(info);
            clip.open(audioStream);

            // Agrega un LineListener para detectar cuando finaliza la reproducción del clip
            clip.addLineListener(new LineListener() {
                @Override
                public void update(LineEvent event) {
                    if (event.getType() == LineEvent.Type.STOP) {
                    }
                }
            });

            // Reproduce el sonido
            clip.start();
        } catch (UnsupportedAudioFileException | LineUnavailableException | IOException e) {
            e.printStackTrace();
        }
    }
    
    String soundFilePath = "C:\\Users\\chris\\Documents\\NetBeansProjects\\ProyectoFinal\\src\\sonidos\\notificacion.wav";
    File sonido = new File(soundFilePath);

}
